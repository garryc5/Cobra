{"version":3,"sources":["utils/tokenService.js","utils/userService.js","Components/Signup/Signup.jsx","Pages/SignupPage/SignupPage.jsx","Pages/LoginPage/LoginPage.jsx","Components/NavBar/NavBar.jsx","Pages/App/App.js","serviceWorker.js","index.js"],"names":["getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","SignupForm","state","name","email","typeOfUser","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","history","push","message","this","length","className","onSubmit","type","placeholder","onChange","htmlFor","disabled","isFormInvalid","to","Component","SignupPage","msg","Signup","LoginPage","pw","alert","NavBar","nav","onClick","handleLogout","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7bee609.chunk.js","sourcesContent":["function setToken(token) {\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Email already taken! test');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    typeOfUser: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf && this.state.password.length > 7);\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"header-footer\">Sign Up</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <label htmlFor=\"select\">I am:</label>\n              <select name=\"typeOfUser\"  onChange={this.handleChange} >\n                <option></option>\n                <option value=\"far\">A Farmer</option>\n                <option value=\"com\">A Commuity Member</option>\n                <option value=\"val\">A Volunteer</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;","import React, { Component } from 'react';\n\nimport SignupForm from '../../Components/Signup/Signup';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <header className=\"header-footer\">Log In</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst NavBar = (props) => {\n  let nav = props.user ?\n    <div>\n      <Link to='' className='NavBar-link' onClick={props.handleLogout}>LOG OUT</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n      <span className='NavBar-welcome'>WELCOME, \n      {props.user.typeOfUser == \"far\" ? 'Farmer  ' : \"\"}\n      {props.user.name}</span>\n    </div>\n    :\n    <div>\n      <Link to='/login' className='NavBar-link'>LOG IN</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;\n      <Link to='/signup' className='NavBar-link'>SIGN UP</Link>\n    </div>;\n\n  return (\n    <div className='NavBar'>\n      {nav}\n    </div>\n  );\n};\n\n\nexport default NavBar","import React, { Component } from 'react';\nimport './App.css';\n// , Redirect \nimport { Route, Switch } from 'react-router-dom';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService';\n// import tokenService from '../../utils/tokenService';\nimport NavBar from '../../Components/NavBar/NavBar'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: userService.getUser()\n    };\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\nrender() {\n  return (\n    <div>\n      <h1>Cobra</h1>\n      <Switch>\n        <Route exact path='/' render={() =>\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n        }/>\n        <Route exact path='/signup' render={({ history }) => \n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n          <Route exact path='/login' render={({ history }) => \n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n        \n      </Switch>\n    </div>\n  );\n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><Route component={App}/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}