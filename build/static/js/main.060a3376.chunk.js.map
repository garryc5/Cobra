{"version":3,"sources":["utils/tokenService.js","utils/userService.js","Components/Signup/Signup.jsx","Pages/SignupPage/SignupPage.jsx","Pages/LoginPage/LoginPage.jsx","Components/NavBar/NavBar.jsx","Pages/ImA/ImA.jsx","Pages/App/App.js","serviceWorker.js","index.js"],"names":["getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","SignupForm","state","name","email","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","history","push","message","this","length","className","onSubmit","type","placeholder","onChange","disabled","isFormInvalid","to","Component","SignupPage","msg","Signup","LoginPage","pw","alert","NavBar","nav","onClick","handleLogout","ImA","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.060a3376.chunk.js","sourcesContent":["function setToken(token) {\r\n  if (token) {\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if (token) {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken\r\n};","import tokenService from './tokenService';\r\n\r\nconst BASE_URL = '/api/';\r\n\r\nfunction signup(user) {\r\n  return fetch(BASE_URL + 'signup', {\r\n    method: 'POST',\r\n    headers: new Headers({'Content-Type': 'application/json'}),\r\n    body: JSON.stringify(user)\r\n  })\r\n  .then(res => {\r\n    if (res.ok) return res.json();\r\n    throw new Error('Email already taken! test');\r\n  })\r\n  .then(({token}) => tokenService.setToken(token));\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + 'login', {\r\n    method: 'POST',\r\n    headers: new Headers({'Content-Type': 'application/json'}),\r\n    body: JSON.stringify(creds)\r\n  })\r\n  .then(res => {\r\n    if (res.ok) return res.json();\r\n    throw new Error('Bad Credentials!');\r\n  })\r\n  .then(({token}) => tokenService.setToken(token));\r\n}\r\n\r\nexport default {\r\n  signup, \r\n  getUser,\r\n  logout,\r\n  login\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport userService from '../../utils/userService';\r\n\r\nclass SignupForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConf: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateMessage('');\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.signup(this.state);\r\n      this.props.handleSignupOrLogin();\r\n      this.props.history.push('/ImA');\r\n    } catch (err) {\r\n      this.props.updateMessage(err.message);\r\n    }\r\n  }\r\n\r\n  isFormInvalid() {\r\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf && this.state.password.length > 7);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-footer\">Sign Up</header>\r\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <button  disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\r\n              <Link to='/'>Cancel</Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupForm;","import React, { Component } from 'react';\r\n\r\nimport SignupForm from '../../Components/Signup/Signup';\r\n\r\nclass SignupPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {message: ''}\r\n  }\r\n\r\n  updateMessage = (msg) => {\r\n    this.setState({message: msg});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport userService from '../../utils/userService';\r\n\r\nclass LoginPage extends Component {\r\n  \r\n  state = {\r\n    email: '',\r\n    pw: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.login(this.state);\r\n      this.props.handleSignupOrLogin();\r\n      this.props.history.push('/');\r\n    } catch (err) {\r\n      alert('Invalid Credentials!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>Log In</header>\r\n        <form onSubmit={this.handleSubmit} >\r\n          <div>\r\n            <div>\r\n              <input type=\"email\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div >\r\n              <input type=\"password\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <button>Log In</button>&nbsp;&nbsp;&nbsp;\r\n              <Link to='/'>Cancel</Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n  let nav = props.user ?\r\n    <div>\r\n      <Link to=''  onClick={props.handleLogout}>LOG OUT</Link>\r\n      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\r\n      <span >WELCOME, {props.user.name}</span>\r\n    </div>\r\n    :\r\n    <div>\r\n      <Link to='/login' >LOG IN</Link>\r\n      &nbsp;&nbsp;|&nbsp;&nbsp;\r\n      <Link to='/signup'>SIGN UP</Link>\r\n    </div>;\r\n\r\n  return (\r\n    <div>\r\n      {nav}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default NavBar","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ImA = (props) => {\r\nreturn(\r\n    <div>\r\n            <h1>Role Selection</h1>\r\n            <h2>How can we help you:</h2>\r\n            <h3>{props.user.name}</h3>\r\n              <Link to='/signup/farmer' >I am a farmer</Link>\r\n              <br/>\r\n              <Link to='/signup/volunter'>I am a volunteer</Link>\r\n              <br/>\r\n              <Link to='/signup/community'>I am a Community member</Link>\r\n    </div>\r\n)}\r\n\r\n export default ImA","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SignupPage from '../SignupPage/SignupPage';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\nimport userService from '../../utils/userService';\r\nimport NavBar from '../../Components/NavBar/NavBar'\r\nimport ImA from '../ImA/ImA'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: userService.getUser()\r\n    };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    userService.logout();\r\n    this.setState({ user: null });\r\n  }\r\n\r\n  handleSignupOrLogin = () => {\r\n    this.setState({user: userService.getUser()});\r\n  }\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <h1>Cobra</h1>\r\n      <Switch>\r\n        <Route exact path='/' render={() =>\r\n          <NavBar \r\n            user={this.state.user}\r\n            handleLogout={this.handleLogout}\r\n          />\r\n        }/>\r\n        <Route exact path='/signup' render={({ history }) => \r\n            <SignupPage\r\n              history={history}\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n            />\r\n          }/>\r\n          <Route exact path='/login' render={({ history }) => \r\n            <LoginPage\r\n              history={history}\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n            />\r\n          }/>\r\n            <Route exact path='/ImA' render={({ history }) => \r\n            <ImA\r\n            user={this.state.user}\r\n            />\r\n            }/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Pages/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router><Route component={App}/></Router>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}